import { NextResponse } from "next/server";
import type { NextRequest } from "next/server";

export async function middleware(req: NextRequest) {
  console.log("üåç Middleware running...");

  // ‚úÖ ‡∏î‡∏∂‡∏á JWT Token ‡∏à‡∏≤‡∏Å Cookie
  const token = req.cookies.get("token")?.value;
  

  if (!token) {
    console.warn("‚ö†Ô∏è No token found, redirecting to login...");
    
    // ‚úÖ Redirect ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ Reload ‡∏´‡∏ô‡πâ‡∏≤
    const url = new URL("/login", req.url);
    const response = NextResponse.redirect(url);
    response.headers.set("Cache-Control", "no-store"); // ‚ùå ‡∏õ‡∏¥‡∏î Cache
    response.headers.set("Refresh", "0; url=/login"); // ‚úÖ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ Browser Redirect
    return response;
  }

  try {
    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö JWT ‡∏ú‡πà‡∏≤‡∏ô API `/api/auth/protected`
    const response = await fetch(new URL("/api/auth/protected", req.url), {
      method: "GET",
      headers: { Cookie: `token=${token}` }, // ‚úÖ ‡∏™‡πà‡∏á Token ‡πÑ‡∏õ‡∏Å‡∏±‡∏ö Header
    });

    if (!response.ok) {
      console.warn("üö´ Unauthorized Token, redirecting to login...");
      return NextResponse.redirect(new URL("/login", req.url));
    }

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å API
    const userData = await response.json();
    console.log(`‚úÖ Token Verified! User ID: ${userData.userId}, Role: ${userData.role}`);

    // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á `/admin` ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Admin
    if (req.nextUrl.pathname.startsWith("/admin") && userData.role.toLowerCase() !== "admin") {
      console.warn("üö´ Unauthorized access to admin, redirecting to user dashboard...");
      return NextResponse.redirect(new URL("/", req.url));
    }

    return NextResponse.next(); // ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ Request ‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ

  } catch (err) {
    console.error("‚ùå Middleware Error:", err);
    return NextResponse.redirect(new URL("/login", req.url));
  }
}

// ‚úÖ ‡πÉ‡∏´‡πâ Middleware ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞ `/admin`, `/website`, ‡πÅ‡∏•‡∏∞ `/api/auth/protected`
export const config = {
  matcher: ["/admin/:path*",  "/dashboard", "/profile", "/posts", "/BMI", "/diary", "/foods", "/NutritionReport", "/tdee", "/api/auth/protected"],
};
